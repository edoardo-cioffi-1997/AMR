<?xml version="1.0"?>
<robot name="amr" xmlns:xacro="http://www.ros.org/wiki/xacro"> 

        <!--<link name="world"/>

        <joint name="dummy" type="fixed">
            <parent link="world"/>
            <child link="amr_body"/>
        </joint>-->

        <!-- wheel params -->
        <xacro:property name="radius" value="0.1"/>
        <xacro:property name="height_w" value="0.06"/>
        <xacro:property name="mass_w" value="30"/>

        <!-- rialzo params -->
        <xacro:property name="height_r" value="0.072"/>
        <xacro:property name="width_r" value="0.925"/>
        <xacro:property name="depth_r" value="0.8862"/>
        <xacro:property name="mass_r" value="160"/>

        <!--body params-->
        <xacro:property name="height_b" value="0.2579"/>
        <xacro:property name="width_b" value="1.3008"/>
        <xacro:property name="depth_b" value="0.9008"/>
        <xacro:property name="mass_b" value="70"/>

        <link name="left_wheel">
            <inertial>
                <origin xyz="0 -0.37 -0.1" rpy="0 0 0"/>
                <mass value="${mass_w}"/>
                <inertia ixx="${mass_w*(3*radius*radius+height_w*height_w)/12}" ixy="0" ixz="0" iyy="${mass_w*(3*radius*radius+height_w*height_w)/12}" iyz="0" izz="${mass_w*radius*radius/2}"/>
            </inertial>
            <visual>
                <geometry>
                    <mesh filename="package://amr/visual/left_wheel.dae" scale="0.001 0.001 0.001"/>
                </geometry>
                <origin xyz="0 -0.37 -0.1" rpy="0 0 0"/>
            </visual>
            <collision>
                <geometry>
                    <mesh filename="package://amr/collision/left_wheel.stl" scale="0.001 0.001 0.001"/>
                </geometry>
                <surface>
                    <friction>
                        <ode>
                            <mu>0.8</mu>
                            <mu2>0.8</mu2> 
                        </ode>
                    </friction>
                </surface>
                <origin xyz="0 -0.37 -0.1" rpy="0 0 0"/>
            </collision>
        </link>

        <link name="right_wheel">
            <inertial>     
                <origin xyz="0 0.37 -0.1" rpy="0 0 0"/>
                <mass value="${mass_w}"/>
                <inertia ixx="${mass_w*(3*radius*radius+height_w*height_w)/12}" ixy="0" ixz="0" iyy="${mass_w*(3*radius*radius+height_w*height_w)/12}" iyz="0" izz="${mass_w*radius*radius/2}"/>
            </inertial>
            <visual>
                <geometry>
                    <mesh filename="package://amr/visual/right_wheel.dae" scale="0.001 0.001 0.001"/>
                </geometry>
                <origin xyz="0 0.37 -0.1" rpy="0 0 0"/>
            </visual>
            <collision>
                <geometry>
                    <mesh filename="package://amr/collision/right_wheel.stl" scale="0.001 0.001 0.001"/>
                </geometry>
                <surface>
                    <friction>
                        <ode>
                            <mu>0.8</mu>
                            <mu2>0.8</mu2> 
                        </ode> 
                    </friction>
                </surface>
                <origin xyz="0 0.37 -0.1" rpy="0 0 0"/>
            </collision>
        </link>

        <link name="amr_body">
            <inertial>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <mass value="${mass_b}"/>
                <inertia ixx="${mass_b*(height_b*height_b+depth_b*depth_b)/12}" ixy="0" ixz="0" iyy="${mass_b*(height_b*height_b+width_b*width_b)/12}" iyz="0" izz="${mass_b*(width_b*width_b+depth_b*depth_b)/12}"/>
            </inertial>
            <visual>
                <geometry>
                    <mesh filename="package://amr/visual/amr_body.dae" scale="0.001 0.001 0.001"/>
                </geometry>
                <origin xyz="0 0 0" rpy="0 0 0"/>
            </visual>
            <collision>
                <geometry>
                    <mesh filename="package://amr/collision/amr_body.stl" scale="0.001 0.001 0.001"/>
                </geometry>
                <origin xyz="0 0 0" rpy="0 0 0"/>
            </collision>
        </link>

        <link name="amr_rialzo">
            <inertial>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <mass value="${mass_r}"/>
                <inertia ixx="${mass_r*(height_r*height_r+depth_r*depth_r)/12}" ixy="0" ixz="0" iyy="${mass_r*(height_r*height_r+width_r*width_r)/12}" iyz="0" izz="${mass_r*(width_r*width_r+depth_r*depth_r)/12}"/>
            </inertial>
            <visual>
                <geometry>
                    <mesh filename="package://amr/visual/amr_rialzo.dae" scale="0.001 0.001 0.001"/>
                </geometry>
                <origin xyz="0 0 0" rpy="0 0 0"/>
            </visual>
            <collision>
                <geometry>
                    <mesh filename="package://amr/collision/amr_rialzo.stl" scale="0.001 0.001 0.001"/>
                </geometry>

                <origin xyz="0 0 0" rpy="0 0 0"/>
            </collision>
        </link>

        <joint name="left_wheel_joint" type="continuous">
            <parent link="amr_body"/>
            <child link="left_wheel"/>
            <origin xyz="0 0.37 0.1" rpy="0 0 0"/>
            <limit effort="10000" velocity="0.35"/>
            <axis xyz="0 1 0"/>
        </joint>

        <joint name="right_wheel_joint" type="continuous">
            <parent link="amr_body"/>
            <child link="right_wheel"/>
            <origin xyz="0 -0.37 0.1" rpy="0 0 0"/>
            <limit effort="10000" velocity="0.35"/>
            <axis xyz="0 1 0"/>
        </joint>

        <joint name="rialzo_joint" type="prismatic">
            <parent link="amr_body"/>
            <child link="amr_rialzo"/>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <limit lower="0" upper="0.06" velocity="0.02" effort="1000"/>
            <axis xyz="0 0 1"/>
        </joint>

        <transmission name="trans_rialzo_joint" >
            <type>transmission_interface/SimpleTransmission</type>
            <joint name = "rialzo_joint" >
                <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            </joint>
            <actuator name="motor_rialzo_joint" >
                <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
                <mechanicalReduction>50</mechanicalReduction>
            </actuator>
        </transmission>

        <transmission name="trans_left_wheel_joint" >
            <type>transmission_interface/SimpleTransmission</type>
            <joint name = "left_wheel_joint" >
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            </joint>
            <actuator name="motor_left_wheel_joint" >
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>

        <transmission name="trans_right_wheel_joint" >
            <type>transmission_interface/SimpleTransmission</type>
            <joint name = "right_wheel_joint" >
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            </joint>
            <actuator name="motor_right_wheel_joint" >
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>

        <gazebo>
            <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
                <robotNamespace>/amr</robotNamespace>
                  <robotParam>robot_description</robotParam>
                  <controlPeriod>0.001</controlPeriod>
                  <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
                  <legacyModeNS>false</legacyModeNS>
            </plugin>
            <plugin name='diff_drive' filename='libgazebo_ros_diff_drive.so'>
                <!-- Wheel Information -->
                <leftJoint>left_wheel_joint</leftJoint>
                <rightJoint>right_wheel_joint</rightJoint>
                <wheelSeparation>0.73</wheelSeparation>
                <wheelDiameter>0.2</wheelDiameter>
                <!-- Limits -->
                <wheelTorque>10000</wheelTorque>
                <wheelAcceleration>0.6</wheelAcceleration>
                <!-- Output -->
                <odometryFrame>odom</odometryFrame>
                <robotBaseFrame>amr_body</robotBaseFrame>
                <publishOdomTF>true</publishOdomTF>
                <publishWheelTF>true</publishWheelTF>
                <alwaysOn>true</alwaysOn>
                <updateRate>100</updateRate>
                <legacyMode>false</legacyMode>
                <commandTopic>cmd_vel</commandTopic>
                <odometryTopic>odom</odometryTopic>
                <publishWheelJointState>true</publishWheelJointState>
                <rosDebugLevel>na</rosDebugLevel>
                <odometrySource>world</odometrySource>
                <publishTf>1</publishTf>
            </plugin>
        </gazebo>

</robot>
